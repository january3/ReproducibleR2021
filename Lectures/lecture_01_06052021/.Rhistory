##------ Sun May  2 23:47:14 2021 ------##
df <- read.table(text='
"Journal impact factor" Number of articles  Mean number of citations of non-reproduced articles*  Mean number of citations of reproduced articles
>20 21  248 (range 3–800) 231 (range 82–519)
5–19  32  169 (range 6–1,909) 13 (range 3–24)', sep="\t")
df
df <- read.delim(text='
"Journal impact factor" Number of articles  Mean number of citations of non-reproduced articles*  Mean number of citations of reproduced articles
>20 21  248 (range 3–800) 231 (range 82–519)
5–19  32  169 (range 6–1,909) 13 (range 3–24)', sep="\t")
df
require(tidyverse)
df <- read_delim(text='
"Journal impact factor" Number of articles  Mean number of citations of non-reproduced articles*  Mean number of citations of reproduced articles
>20 21  248 (range 3–800) 231 (range 82–519) 
5–19  32  169 (range 6–1,909) 13 (range 3–24)', sep="\t")
?read_delim
df <- read_delim(text='
"Journal impact factor" Number of articles  Mean number of citations of non-reproduced articles*  Mean number of citations of reproduced articles
>20 21  248 (range 3–800) 231 (range 82–519) 
5–19  32  169 (range 6–1,909) 13 (range 3–24)', delim="\t")
df <- read.delim(text='
"Journal impact factor" Number of articles  Mean number of citations of non-reproduced articles*  Mean number of citations of reproduced articles
>20 21  248 (range 3–800) 231 (range 82–519) 
5–19  32  169 (range 6–1,909) 13 (range 3–24)', sep="\t")
df
df <- read.delim(text='
"Journal impact factor"\tNumber of articles\tMean number of citations of non-reproduced articles*\tMean number of citations of reproduced articles
>20\t21\t248 (range 3–800)\t231 (range 82–519)
5–19\t32\t169 (range 6–1,909)\t13 (range 3–24)', sep="\t")
df
colnames(df) <- gsub("\\.", " ", colnames(df))

.1 * .8 / (.1 * .8 + .9 * .05)
1 - .1 * .8 / (.1 * .8 + .9 * .05)
N     <- 1000
pH1   <- seq(0, 1, length.out=100)
power <- .8
FPR05   <- 1 - pH1 * power / (pH1 * power + (1-pH1) * .05)
FPR005  <- 1 - pH1 * power / (pH1 * power + (1-pH1) * .005)
FPR0005 <- 1 - pH1 * power / (pH1 * power + (1-pH1) * .0005)
df <- data.frame(pH1=rep(pH1, 3), FPR=c(FPR05, FPR005, FPR0005), type=rep(c("0.05", "0.005", "0.0005"), each=length(pH1)))
df
ggplot(df, aes(x=pH1, y=FPR, color=type)) + geom_line()
ggplot(df, aes(x=pH1, y=FPR, color=type)) + geom_line() + scale_y_continuous(trans="log10")
ggplot(df, aes(x=pH1, y=FPR, color=type)) + geom_line() + scale_y_continuous(trans="log10") + geom_hline(yintercept=0.05)
library(RColorBrewer)
display.brewer.all()
ggplot(df, aes(x=pH1, y=FPR, color=type)) + geom_line(width=2) + scale_y_continuous(trans="log10") + geom_hline(yintercept=0.05) 
ggplot(df, aes(x=pH1, y=FPR, color=type)) + geom_line(size=2) + scale_y_continuous(trans="log10") + geom_hline(yintercept=0.05) 
ggplot(df, aes(x=pH1, y=FPR, color=type)) + geom_line(size=2) + scale_y_continuous(trans="log10") + geom_hline(yintercept=0.05) + scale_color_brewer(palette="Dark2") + theme_cowplot()
library(cowplot)
ggplot(df, aes(x=pH1, y=FPR, color=type)) + geom_line(size=2) + scale_y_continuous(trans="log10") + geom_hline(yintercept=0.05) + scale_color_brewer(palette="Dark2") + theme_cowplot()
pH1   <- seq(0.0001, 1, length.out=100)
power <- .8
FPR05   <- 1 - pH1 * power / (pH1 * power + (1-pH1) * .05)
FPR005  <- 1 - pH1 * power / (pH1 * power + (1-pH1) * .005)
FPR0005 <- 1 - pH1 * power / (pH1 * power + (1-pH1) * .0005)
df <- data.frame(pH1=rep(pH1, 3), FPR=c(FPR05, FPR005, FPR0005), type=rep(c("0.05", "0.005", "0.0005"), each=length(pH1)))
g1 <- ggplot(df, aes(x=pH1, y=FPR, color=type)) + geom_line(size=2) + theme_cowplot() +
  scale_color_brewer(palette="Dark2") + geom_hline(yintercept=0.05)
g1
g1 + scale_color_brewer(palette="Dark2", name="dupa")
g1 + scale_color_brewer(palette="Dark2", name="dupa")
pop1 <- rnorm(177 + 0.3, 10000)
pop2 <- rnorm(177 - 0.3, 10000)
df <- data.frame(Height=c(pop1, pop2), "Birth Date"=rep(c("April", "October"), each=10000))
pop1 <- rnorm(10000, mean=177 + 0.3, sd=7)
pop2 <- rnorm(10000, mean=177 - 0.3, sd=7)
df <- data.frame(Height=c(pop1, pop2), "Birth Date"=rep(c("April", "October"), each=10000))
ggplot(df, aes(x=Height)) + geom_density()
ggplot(df, aes(x=Height, color=.data[["Birth Date"]])) + geom_density()
df
df <- tibble(Height=c(pop1, pop2), "Birth Date"=rep(c("April", "October"), each=10000))
df
ggplot(df, aes(x=Height, color=.data[["Birth Date"]])) + geom_density()
N <- 100000
pop1 <- rnorm(N, mean=177 + 0.3, sd=7)
pop2 <- rnorm(N, mean=177 - 0.3, sd=7)
df <- data.frame(Height=c(pop1, pop2), "Birth Date"=rep(c("April", "October"), each=N))
ggplot(df, aes(x=Height, color=.data[["Birth Date"]])) + geom_density()
N <- 100000
pop1 <- rnorm(N, mean=177 + 0.3, sd=7)
pop2 <- rnorm(N, mean=177 - 0.3, sd=7)
df <- tibble(Height=c(pop1, pop2), "Birth Date"=rep(c("April", "October"), each=N))
ggplot(df, aes(x=Height, color=.data[["Birth Date"]])) + geom_density()
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]])) + geom_density()
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]])) + geom_density(alpha=0.5)
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]])) + geom_density(alpha=0.2)
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + geom_density(alpha=0.2)
xclip(1)
library(myfuncs)
xclip(1)
xclip(3)
xclip(5)
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + 
  geom_density(alpha=0.2) + theme_cowplot() +
  theme(axis_line=element_blank())
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + geom_density(alpha=0.2) + theme_cowplot() + theme(axis.line=element_blank())
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + 
  geom_density(alpha=0.2) + theme_cowplot() +
  theme(axis.line=element_blank()) +
  ylab("Density") +
  geom_vline(xintercept=177+0.3, color="red", size=3)
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + 
  geom_density(alpha=0.2) + theme_cowplot() +
  theme(axis.line=element_blank()) +
  ylab("Density") +
  geom_vline(xintercept=177+0.3, color="red", size=2, style=2)
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + 
  geom_density(alpha=0.2) + theme_cowplot() +
  theme(axis.line=element_blank()) +
  ylab("Density") +
  geom_vline(xintercept=177+0.3, color="red", size=2, linetype="dashed")
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + 
  geom_density(alpha=0.2) + theme_cowplot() +
  theme(axis.line=element_blank()) +
  ylab("Density") +
  geom_vline(xintercept=177+0.3, color="red", size=1, linetype="dashed")
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + 
  geom_density(alpha=0.2, size=3) + theme_cowplot() +
  theme(axis.line=element_blank()) +
  ylab("Density") +
  geom_vline(xintercept=177+0.3, color="red", size=1, linetype="dashed")
?scale_color_brewer
ggplot(df, aes(x=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) + 
  geom_density(alpha=0.2, size=3) + theme_cowplot() +
  theme(axis.line=element_blank()) +
  ylab("Density") +
  geom_vline(xintercept=c(177+0.3, 177-0.3), color=c("#F8766D", "#00BFC4"), size=1, linetype="dashed")
display.brewer.all(colorblindFriendly=T)
ggplot(df, aes(x=.data[["Birth Date"]], y=Height, fill=.data[["Birth Date"]], color=.data[["Birth Date"]])) +
  geom_boxplot(alpha=0.2) + theme_cowplot() +
  theme(axis.line=element_blank()) 
pop2 <- rnorm(N, mean=177 - 0.3, sd=7)
pop2 <- rnorm(N, mean=177 - 0.3, sd=7)
t.test(df$Height ~ df[[2]])
format(N)
as.character(N)
sprintf("%d", N)
